paths:
  /api/users/register:
    post:
      tags: 
      - Users
      summary: Register a new user
      requestBody:
        content: 
          application/json:
            schema: 
              $ref: '#/components/parameters/schemas/NewUserSchema'
        required: true
      responses:
        200:
          description: The user was registered successfully
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Users/UserRegistered'
        404:
          description: Error in the validation of the parameters
          $ref: '#/components/schema/Products/ValidationSchemaError'
        500:
          description: Error on the server
          $ref: '#/components/schema/Products/NotFound'
  /api/users/login:
    post:
      tags: 
      - Users
      summary: Login user
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/parameters/schemas/LoginUserSchema'
        required: true
      responses:
        200:
          description: The user was logged in successfully
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Users/UserLogged'
        404:
          description: Error in the validation of the parameters
          $ref: '#/components/schema/Products/ValidationSchemaError'
        500:
          description: Error on the server
          $ref: '#/components/schema/Products/NotFound'
  /api/users/register-github:
    get:
      tags: 
      - Users
      summary: Register a new user with github
      responses:
        200:
          description: The user was registered successfully with github
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Users/UserRegisteredWithGithub'
        404:
          description: Error in the validation of the parameters
          $ref: '#/components/schema/Products/ValidationSchemaError'
        500:
          description: Error on the server
          $ref: '#/components/schema/Products/NotFound'
  /api/users/logout:
    post:
      tags: 
      - Users
      summary: Logout session
      responses:
        200:
          description: The user session was logged out
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Users/UserLoggedOut'
        404:
          description: Error in the validation of the parameters
          $ref: '#/components/schema/Products/ValidationSchemaError'
        500:
          description: Error on the server
          $ref: '#/components/schema/Products/NotFound'
  /api/users/list:
    get:
      tags: 
      - Users
      summary: Get a users list
      responses:
        200:
          description: List with all user obtained
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Users/UsersList'
        404:
          description: Error in the validation of the parameters
          $ref: '#/components/schema/Products/ValidationSchemaError'
        500:
          description: Error on the server
          $ref: '#/components/schema/Products/NotFound'
  /api/users/clear-users:
    delete:
      tags: 
      - Users
      summary: Delete users inactive for more than two days
      responses:
        200:
          description: The users with an inactivity of more than two days was deleted
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Users/UsersDeleted'
        404:
          description: Error in the validation of the parameters
          $ref: '#/components/schema/Products/ValidationSchemaError'
        500:
          description: Error on the server
          $ref: '#/components/schema/Products/NotFound'
  /api/users/forgot-password:
    post:
      tags: 
      - Users
      summary: Send a mail for recover your password
      requestBody:
        content:
          application/json:
            schema: 
              type: object
              required:
              - email
            properties:
              email: 
                type: string
                description: email of the user
            example:
              email: ejohn@example.com
        required: true
      responses:
        200:
          description: Mail sent successfully
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Users/EmailSent'
        404:
          description: Error in the validation of the parameters
          $ref: '#/components/schema/Products/ValidationSchemaError'
        500:
          description: Error on the server
          $ref: '#/components/schema/Products/NotFound'
  /api/users/restore-password:
    post:
      tags: 
      - Users
      summary: Change password
      requestBody:
        content:
          application/json:
            schema: 
              $ref: '#/components/parameters/schemas/LoginUserSchema'
        required: true
      responses:
        200:
          description: Password changed successfully
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Users/PasswordChanged'
        404:
          description: Error in the validation of the parameters
          $ref: '#/components/schema/Products/ValidationSchemaError'
        500:
          description: Error on the server
          $ref: '#/components/schema/Products/NotFound'
  /api/users/{uid}/documents:
    post:
      tags: 
      - Users
      summary: Upload documents
      parameters:
        - in: path
          name: pid
          required: true
          description: string id required
          schema:
            type: string
      requestBody:
        content:
          application/form-data:
            schema: 
              $ref: '#/components/parameters/schemas/DocumentSchema'
        required: true
      responses:
        200:
          description: Documents uploaded successfully
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Users/UploadDocs'
        404:
          description: Error in the validation of the parameters
          $ref: '#/components/schema/Products/ValidationSchemaError'
        500:
          description: Error on the server
          $ref: '#/components/schema/Products/NotFound'
  /api/users/premium/{uid}:
    post:
      tags: 
      - Users
      summary: Change role
      parameters:
        - in: path
          name: pid
          required: true
          description: string id required
          schema:
            type: string
      responses:
        200:
          description: Your role change
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Users/RoleChanged'
        404:
          description: Error in the validation of the parameters
          $ref: '#/components/schema/Products/ValidationSchemaError'
        500:
          description: Error on the server
          $ref: '#/components/schema/Products/NotFound'

  /api/products:
    post:
      tags: 
      - Products
      summary: Create a new product
      requestBody:
        content: 
          application/json:
            schema: 
              $ref: '#/components/parameters/schemas/NewProduct'
        required: true
      responses:
        200:
          description: The product was created successfully
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Products/AddProduct'
        404:
          description: Error in the validation of the parameters
          $ref: '#/components/schema/Products/ValidationSchemaError'
        500:
          description: Error on the server
          $ref: '#/components/schema/Products/NotFound'
    get:
      tags:
      - Products
      summary: Get all products
      responses:
        200: 
          description: Products found
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Products/GetAllProducts'
        404:
          description: Error in the validation of the parameters
          $ref: '#/components/schema/Products/ValidationSchemaError'
        500:
          description: Error on the server
          $ref: '#/components/schema/Products/NotFound'
    delete:
      tags:
      - Products
      summary: Delete all products
      responses:
        200: 
          description: Products found
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Products/DeleteAllProducts'
        404:
          description: Error in the validation of the parameters
          $ref: '#/components/schema/Products/ValidationSchemaError'
        500:
          description: Error on the server
          $ref: '#/components/schema/Products/NotFound'
  /api/products/{pid}:
    get:
      tags:
      - Products
      summary: Get products by id
      parameters:
        - in: path
          name: pid
          required: true
          description: string id required
          schema:
            type: string
      responses:
        200:
          description: Product found
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Products/Product'
        404:
          description: Error in the validation of the parameters
          $ref: '#/components/schema/Products/ValidationSchemaError'
        500:  
          description: Error on the server
          $ref: '#/components/schema/Products/NotFound'
    delete:
      tags:
      - Products
      summary: Delete products by id
      parameters:
        - in: path
          name: pid
          required: true
          description: string id required
          schema:
            type: string
      responses:
        200:
          description: Product delete
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Products/DeleteProduct'
        404:
          description: Error in the validation of the parameters
          $ref: '#/components/schema/Products/ValidationSchemaError'
        500:
          description: Error on the server
          $ref: '#/components/schema/Products/NotFound'
  
  /api/carts/tickets:
    get:
      tags:
      - Carts
      summary: Get all tickets
      responses:
        200:
          description: Tickets found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carts/Ticket'
        404:
          description: Error in the validation of the parameters
          $ref: '#/components/schema/Products/ValidationSchemaError'
        500:
          description: Error on the server
          $ref: '#/components/schema/Products/NotFound'
  
  /api/carts/{cid}:
    get:
      tags:
      - Carts
      summary: Get one cart
      parameters:
        - in: path
          name: cid
          required: true
          description: string id required
          schema:
            type: string
      responses:
        200:
          description: Cart found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carts/Cart'
        404:
          description: Error in the validation of the parameters
          $ref: '#/components/schema/Products/ValidationSchemaError'
        500:  
          description: Error on the server
          $ref: '#/components/schema/Products/NotFound'
    delete:
      tags:
      - Carts
      summary: Delete all products in cart by id
      parameters:
        - in: path
          name: cid
          required: true
          description: string id required
          schema:
            type: string
      responses:
        200:
          description: All products delete
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Carts/Cart'
        404:
          description: Error in the validation of the parameters
          $ref: '#/components/schema/Products/ValidationSchemaError'
        500:
          description: Error on the server
          $ref: '#/components/schema/Products/NotFound'
  
  /api/carts/{cid}/purchase:
    post:
      tags:
      - Carts
      summary: Purchase products
      parameters:
        - in: path
          name: cid
          required: true
          description: string id required
          schema:
            type: string
      responses:
        200:
          description: Products purchased
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carts/Ticket'
        404:
          description: Error in the validation of the parameters
          $ref: '#/components/schema/Products/ValidationSchemaError'
        500:  
          description: Error on the server
          $ref: '#/components/schema/Products/NotFound'

  /api/carts/{cid}/products/{pid}:
    put:
      tags:
      - Carts
      summary: Add products to cart
      parameters:
        - in: path
          name: cid
          required: true
          description: string id required
          schema:
            type: string
        - in: path
          name: pid
          required: true
          description: string id required
          schema:
            type: string
      responses:
        200:
          description: Product added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carts/Cart'
        404:
          description: Error in the validation of the parameters
          $ref: '#/components/schema/Products/ValidationSchemaError'
        500:  
          description: Error on the server
          $ref: '#/components/schema/Products/NotFound'
    delete:
      tags:
      - Carts
      summary: Delete a product in cart
      parameters:
        - in: path
          name: cid
          required: true
          description: string id required
          schema:
            type: string
        - in: path
          name: pid
          required: true
          description: string id required
          schema:
            type: string
      responses:
        200:
          description: Product in cart deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carts/Cart'
        404:
          description: Error in the validation of the parameters
          $ref: '#/components/schema/Products/ValidationSchemaError'
        500:  
          description: Error on the server
          $ref: '#/components/schema/Products/NotFound'

