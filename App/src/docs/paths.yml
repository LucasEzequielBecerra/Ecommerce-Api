paths:
  /api/products/:
    post:
      tags: 
      - Products
      summary: Create a new product
      requestBody:
        content: 
          application/json:
            schema: 
              $ref: '#/components/parameters/schemas/NewProduct'
        required: true
      responses:
        200:
          description: The product was created successfully
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Products/AddProduct'
        404:
          description: Error in the validation of the parameters
          $ref: '#/components/schema/Products/ValidationSchemaError'
        500:
          description: Error on the server
          $ref: '#/components/schema/Products/NotFound'
    get:
      tags:
      - Products
      summary: Get all products
      responses:
        200: 
          description: Products found
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Products/GetAllProducts'
        404:
          description: Error in the validation of the parameters
          $ref: '#/components/schema/Products/ValidationSchemaError'
        500:
          description: Error on the server
          $ref: '#/components/schema/Products/NotFound'
  /api/products/{id}:
    get:
      tags:
      - Products
      summary: Get products by id
      parameters:
        - in: path
          name: id
          required: true
          description: string id required
          schema:
            type: string
      responses:
        200:
          description: Product found
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Products/Product'
        404:
          description: Error in the validation of the parameters
          $ref: '#/components/schema/Products/ValidationSchemaError'
        500:  
          description: Error on the server
          $ref: '#/components/schema/Products/NotFound'
    delete:
      tags:
      - Products
      summary: Delete products by id
      parameters:
        - in: path
          name: id
          required: true
          description: string id required
          schema:
            type: string
      responses:
        200:
          description: Product delete
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Products/DeleteProduct'
        404:
          description: Error in the validation of the parameters
          $ref: '#/components/schema/Products/ValidationSchemaError'
        500:
          description: Error on the server
          $ref: '#/components/schema/Products/NotFound'



# tags:
# summary:
# requestBody:
# responses: